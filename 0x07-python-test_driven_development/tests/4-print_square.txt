The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Import module:
    >>> print_square = __import__('4-print_square').print_square

Test print with size 1:
    >>> print_square(1)
    #

Test print with size 3:
    >>> print_square(3)
    ###
    ###
    ###

Test print with size 5:
    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####
    
Test print with size 11:
    >>> print_square(11)
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########
    ###########

Test print with size 0:
    >>> print_square(0)
    
Test float size:
    >>> print_square(25.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test string size:
    >>> print_square("rasha")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
    
Test negative size:
    >>> print_square(-6)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test None size:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test NaN size:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test infinity size:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Missing size argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
